<h1>@ViewData["Message"]</h1>

<!-- Live Scoreboard Section -->
<div id="scoreboard">
    <h2>Live Scoreboard</h2>
    <p id="team1-score">Team 1: 0</p>
    <p id="team2-score">Team 2: 0</p>
</div>

<!-- Past Games Section -->
<h2>Past Games</h2>
<div id="pastGames">
    <ul id="pastGamesList">
        @foreach (var score in ViewBag.PastScores)
        {
            <li>@score.Team1 @score.Score1 - @score.Team2 @score.Score2 (@score.DateSubmitted.ToShortDateString()) 
                <br><strong>Location:</strong> @score.Location
                <br><strong>Game Type:</strong> @score.GameType
                <br><strong>Player of the Game:</strong> @score.PlayerOfTheGame
                <br><a href="/Home/Edit/@score.Id">Edit</a>
                <a href="/Home/Delete/@score.Id">Delete</a>
            </li>
        }
    </ul>
</div>

<!-- Form to submit new scores -->
<form asp-action="SubmitScore" method="post" id="scoreForm">
    <h3>Submit New Game</h3>
    <label>Team 1: </label>
    <input type="text" id="team1" name="team1" required/><br>

    <label>Team 2: </label>
    <input type="text" id="team2" name="team2" required/><br>

    <label>Score 1: </label>
    <input type="number" id="score1" name="score1" min="0" required/><br>

    <label>Score 2: </label>
    <input type="number" id="score2" name="score2" min="0" required/><br>

    <label>Date: </label>
    <input type="date" id="dateSubmitted" name="dateSubmitted" required/><br>

    <label>Location: </label>
    <input type="text" id="location" name="location" required/><br>

    <label>Game Type: </label>
    <input type="text" id="gameType" name="gameType" required/><br>

    <label>Player of the Game: </label>
    <input type="text" id="playerOfTheGame" name="playerOfTheGame" required/><br>

    <input type="submit" value="Submit Score" />
</form>

<!-- Filtering form for past games by a single date -->
<h3>Filter Past Games</h3>
<form method="get" id="filterForm">
    <label>Game Date: </label>
    <input type="date" name="gameDate" /><br>
    <label>Team: </label>
    <input type="text" name="team" /><br>
    <input type="submit" value="Filter" />
</form>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>

<script>
    // Connect to the SignalR Hub
    var connection = new signalR.HubConnectionBuilder().withUrl("/scoreHub").build();

    // Start the connection
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    // Form submit handler for real-time updates
    document.getElementById("scoreForm").addEventListener("submit", function (event) {
        event.preventDefault();
        var team1 = document.getElementById("team1").value;
        var team2 = document.getElementById("team2").value;
        var score1 = document.getElementById("score1").value;
        var score2 = document.getElementById("score2").value;
        var dateSubmitted = new Date(document.getElementById("dateSubmitted").value).toISOString();  // Convert date to ISO string
        var location = document.getElementById("location").value;
        var gameType = document.getElementById("gameType").value;
        var playerOfTheGame = document.getElementById("playerOfTheGame").value;

        // Send score update via SignalR
        connection.invoke("SendScoreUpdate", team1, team2, parseInt(score1), parseInt(score2), dateSubmitted, location, gameType, playerOfTheGame)
        .then(() => {
            console.log("Score submission sent");
        })
        .catch(function (err) {
            console.error(err.toString());
        });

        // Clear the form after submission
        document.getElementById("scoreForm").reset();
    });

    // Receive real-time score updates and update the scoreboard
    connection.on("ReceiveScoreUpdate", function (team1, team2, score1, score2) {
        document.getElementById("team1-score").innerText = team1 + ": " + score1;
        document.getElementById("team2-score").innerText = team2 + ": " + score2;
    });

    // Receive real-time past games updates
    connection.on("ReceivePastGamesUpdate", function (pastGames) {
        var pastGamesList = document.getElementById("pastGamesList");
        pastGamesList.innerHTML = "";
        pastGames.forEach(function(game) {
            var li = document.createElement("li");
            li.innerHTML = game.team1 + " " + game.score1 + " - " + game.team2 + " " + game.score2 + " (" + new Date(game.dateSubmitted).toLocaleDateString() + ")" +
                "<br><strong>Location:</strong> " + game.location + 
                "<br><strong>Game Type:</strong> " + game.gameType +
                "<br><strong>Player of the Game:</strong> " + game.playerOfTheGame +
                "<br><a href='/Home/Edit/" + game.id + "'>Edit</a>" +
                " <a href='/Home/Delete/" + game.id + "'>Delete</a>";
            pastGamesList.appendChild(li);
        });
    });
</script>